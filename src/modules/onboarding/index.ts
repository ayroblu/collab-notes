import type { Settings } from "@/components/Contexts";

import { getRoom } from "../documents";
import { generatePassword, slugify } from "../utils";

type JoinNewRoomRequest = {
  settings: Settings;
  setSettings: (settings: Settings) => void;
  roomName: string;
  navigate: (path: string) => void;
  fileName: string;
};
export function joinNewRoom({
  fileName,
  navigate,
  roomName,
  setSettings,
  settings,
}: JoinNewRoomRequest) {
  const autogeneratedPassword = generatePassword({ length: 40 });
  const roomId = `${slugify(roomName)}-${generatePassword({
    validCharsType: "lowerLettersNumbers",
    length: 12,
  })}`;
  setSettings({
    ...settings,
    rooms: [
      ...settings.rooms,
      {
        id: roomId,
        name: roomName,
        password: autogeneratedPassword,
      },
    ],
    activeRoomId: roomId,
  });
  const { files, name } = getRoom(roomId, autogeneratedPassword);
  name.insert(0, roomName);
  const newFile = { name: fileName, tags: [] };
  files.insert(0, [newFile]);
  navigate(`files?name=${newFile.name}`);
}
