"use strict";(self.webpackChunkcollab_notes=self.webpackChunkcollab_notes||[]).push([[7287],{37287:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "conf": () => (/* binding */ conf),\n/* harmony export */   "language": () => (/* binding */ language)\n/* harmony export */ });\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4879);\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.1(337587859b1c171314b40503171188b6cea6a32a)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __markAsModule = (target) => __defProp(target, "__esModule", { value: true });\nvar __reExport = (target, module, desc) => {\n  if (module && typeof module === "object" || typeof module === "function") {\n    for (let key of __getOwnPropNames(module))\n      if (!__hasOwnProp.call(target, key) && key !== "default")\n        __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });\n  }\n  return target;\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__markAsModule(monaco_editor_core_exports);\n__reExport(monaco_editor_core_exports, _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\n// src/basic-languages/python/python.ts\nvar conf = {\n  comments: {\n    lineComment: "#",\n    blockComment: ["\'\'\'", "\'\'\'"]\n  },\n  brackets: [\n    ["{", "}"],\n    ["[", "]"],\n    ["(", ")"]\n  ],\n  autoClosingPairs: [\n    { open: "{", close: "}" },\n    { open: "[", close: "]" },\n    { open: "(", close: ")" },\n    { open: \'"\', close: \'"\', notIn: ["string"] },\n    { open: "\'", close: "\'", notIn: ["string", "comment"] }\n  ],\n  surroundingPairs: [\n    { open: "{", close: "}" },\n    { open: "[", close: "]" },\n    { open: "(", close: ")" },\n    { open: \'"\', close: \'"\' },\n    { open: "\'", close: "\'" }\n  ],\n  onEnterRules: [\n    {\n      beforeText: new RegExp("^\\\\s*(?:def|class|for|if|elif|else|while|try|with|finally|except|async).*?:\\\\s*$"),\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n    }\n  ],\n  folding: {\n    offSide: true,\n    markers: {\n      start: new RegExp("^\\\\s*#region\\\\b"),\n      end: new RegExp("^\\\\s*#endregion\\\\b")\n    }\n  }\n};\nvar language = {\n  defaultToken: "",\n  tokenPostfix: ".python",\n  keywords: [\n    "False",\n    "None",\n    "True",\n    "and",\n    "as",\n    "assert",\n    "async",\n    "await",\n    "break",\n    "class",\n    "continue",\n    "def",\n    "del",\n    "elif",\n    "else",\n    "except",\n    "exec",\n    "finally",\n    "for",\n    "from",\n    "global",\n    "if",\n    "import",\n    "in",\n    "is",\n    "lambda",\n    "nonlocal",\n    "not",\n    "or",\n    "pass",\n    "print",\n    "raise",\n    "return",\n    "try",\n    "while",\n    "with",\n    "yield",\n    "int",\n    "float",\n    "long",\n    "complex",\n    "hex",\n    "abs",\n    "all",\n    "any",\n    "apply",\n    "basestring",\n    "bin",\n    "bool",\n    "buffer",\n    "bytearray",\n    "callable",\n    "chr",\n    "classmethod",\n    "cmp",\n    "coerce",\n    "compile",\n    "complex",\n    "delattr",\n    "dict",\n    "dir",\n    "divmod",\n    "enumerate",\n    "eval",\n    "execfile",\n    "file",\n    "filter",\n    "format",\n    "frozenset",\n    "getattr",\n    "globals",\n    "hasattr",\n    "hash",\n    "help",\n    "id",\n    "input",\n    "intern",\n    "isinstance",\n    "issubclass",\n    "iter",\n    "len",\n    "locals",\n    "list",\n    "map",\n    "max",\n    "memoryview",\n    "min",\n    "next",\n    "object",\n    "oct",\n    "open",\n    "ord",\n    "pow",\n    "print",\n    "property",\n    "reversed",\n    "range",\n    "raw_input",\n    "reduce",\n    "reload",\n    "repr",\n    "reversed",\n    "round",\n    "self",\n    "set",\n    "setattr",\n    "slice",\n    "sorted",\n    "staticmethod",\n    "str",\n    "sum",\n    "super",\n    "tuple",\n    "type",\n    "unichr",\n    "unicode",\n    "vars",\n    "xrange",\n    "zip",\n    "__dict__",\n    "__methods__",\n    "__members__",\n    "__class__",\n    "__bases__",\n    "__name__",\n    "__mro__",\n    "__subclasses__",\n    "__init__",\n    "__import__"\n  ],\n  brackets: [\n    { open: "{", close: "}", token: "delimiter.curly" },\n    { open: "[", close: "]", token: "delimiter.bracket" },\n    { open: "(", close: ")", token: "delimiter.parenthesis" }\n  ],\n  tokenizer: {\n    root: [\n      { include: "@whitespace" },\n      { include: "@numbers" },\n      { include: "@strings" },\n      [/[,:;]/, "delimiter"],\n      [/[{}\\[\\]()]/, "@brackets"],\n      [/@[a-zA-Z_]\\w*/, "tag"],\n      [\n        /[a-zA-Z_]\\w*/,\n        {\n          cases: {\n            "@keywords": "keyword",\n            "@default": "identifier"\n          }\n        }\n      ]\n    ],\n    whitespace: [\n      [/\\s+/, "white"],\n      [/(^#.*$)/, "comment"],\n      [/\'\'\'/, "string", "@endDocString"],\n      [/"""/, "string", "@endDblDocString"]\n    ],\n    endDocString: [\n      [/[^\']+/, "string"],\n      [/\\\\\'/, "string"],\n      [/\'\'\'/, "string", "@popall"],\n      [/\'/, "string"]\n    ],\n    endDblDocString: [\n      [/[^"]+/, "string"],\n      [/\\\\"/, "string"],\n      [/"""/, "string", "@popall"],\n      [/"/, "string"]\n    ],\n    numbers: [\n      [/-?0x([abcdef]|[ABCDEF]|\\d)+[lL]?/, "number.hex"],\n      [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?[jJ]?[lL]?/, "number"]\n    ],\n    strings: [\n      [/\'$/, "string.escape", "@popall"],\n      [/\'/, "string.escape", "@stringBody"],\n      [/"$/, "string.escape", "@popall"],\n      [/"/, "string.escape", "@dblStringBody"]\n    ],\n    stringBody: [\n      [/[^\\\\\']+$/, "string", "@popall"],\n      [/[^\\\\\']+/, "string"],\n      [/\\\\./, "string"],\n      [/\'/, "string.escape", "@popall"],\n      [/\\\\$/, "string"]\n    ],\n    dblStringBody: [\n      [/[^\\\\"]+$/, "string", "@popall"],\n      [/[^\\\\"]+/, "string"],\n      [/\\\\./, "string"],\n      [/"/, "string.escape", "@popall"],\n      [/\\\\$/, "string"]\n    ]\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///37287\n')}}]);